#!/usr/bin/env bash

set -Eeuo pipefail
exitcode=0

    printf "12.2-postgis-3.0.0: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:12.2-postgis-3.0.0 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "12.2-postgis-2.5.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:12.2-postgis-2.5.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "11.7-postgis-3.0.0: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:11.7-postgis-3.0.0 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "11.7-postgis-2.5.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:11.7-postgis-2.5.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "10.12-postgis-3.0.0: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:10.12-postgis-3.0.0 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "10.12-postgis-2.5.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:10.12-postgis-2.5.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "10.12-postgis-2.4.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:10.12-postgis-2.4.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.6.17-postgis-3.0.0: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.6.17-postgis-3.0.0 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.6.17-postgis-2.5.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.6.17-postgis-2.5.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.6.17-postgis-2.4.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.6.17-postgis-2.4.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.6.17-postgis-2.3.3: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.6.17-postgis-2.3.3 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.5.21-postgis-3.0.0: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.5.21-postgis-3.0.0 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.5.21-postgis-2.5.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.5.21-postgis-2.5.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.5.21-postgis-2.4.4: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.5.21-postgis-2.4.4 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi

    printf "9.5.21-postgis-2.3.3: "
    output=$(docker run -v $(pwd)/test.sh:/docker-entrypoint-initdb.d/test.sh -e POSTGRES_PASSWORD=password --rm nickblah/postgis:9.5.21-postgis-2.3.3 2>&1 || true)
    if [[ $output =~ "PostGIS Tests: Error" ]]; then
      exitcode=1
      echo "Error"
      echo $output
      echo
    elif [[ $output =~ "PostGIS Tests: OK" ]]; then
      echo "OK"
    else
      exitcode=1
      echo "Unexpected Error"
      echo $output
      echo
    fi


exit "$exitcode"
